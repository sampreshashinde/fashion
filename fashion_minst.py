# -*- coding: utf-8 -*-
"""Fashion minst.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WAIQ0p5pmkz60g9Bxbh1IdUPbFAguQkB
"""

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.metrics import *

(X_train, y_train) , (X_test, y_test) = tf.keras.datasets.fashion_mnist.load_data()

X_train.shape

y_test.shape

y_train

X_train[0]

plt.imshow(X_train[5])

pd.Series(y_train).value_counts()

pd.Series(y_train).unique()

X_train =  X_train/255
X_test =  X_test/255

model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(150, activation='relu'),
    keras.layers.Dense(10, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(X_train, y_train, epochs=20)

model.summary()

y_pred=model.predict(X_test)
y_pred_final=[np.argmax(i) for i in y_pred]
len(y_pred_final)

y_pred.shape

print(classification_report(y_test,y_pred_final))

cm = tf.math.confusion_matrix(labels=y_test,predictions=y_pred_final)

plt.figure(figsize = (10,7))
sns.heatmap(cm, annot=True, fmt='d')
plt.xlabel('Predicted')
plt.ylabel('Truth')

model.save("final_fashion_model.h5")

